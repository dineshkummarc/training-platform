{
  "version": 3,
  "names": [
    "SelectionText",
    "elm",
    "selectionStart",
    "selectionEnd",
    "start",
    "end",
    "value",
    "isNaN",
    "text",
    "focus",
    "setRangeText",
    "position",
    "slice",
    "charAt",
    "getLineStartNumber",
    "str",
    "getSelectedValue",
    "indent",
    "replace",
    "old",
    "oldStart",
    "insertText",
    "split",
    "map",
    "txt",
    "join",
    "length",
    "reg",
    "RegExp",
    "newStart",
    "test",
    "event",
    "Event",
    "bubbles",
    "cancelable",
    "dispatchEvent"
  ],
  "sources": [
    "../src/SelectionText.ts"
  ],
  "sourcesContent": [
    "export class SelectionText {\n  elm: HTMLTextAreaElement;\n  start: number;\n  end: number;\n  value: string;\n  constructor(elm: HTMLTextAreaElement) {\n    const { selectionStart, selectionEnd } = elm;\n    this.elm = elm;\n    this.start = selectionStart;\n    this.end = selectionEnd;\n    this.value = this.elm.value;\n  }\n  position(start?: number, end?: number) {\n    const { selectionStart, selectionEnd } = this.elm;\n    this.start = typeof start === 'number' && !isNaN(start) ? start : selectionStart;\n    this.end = typeof end === 'number' && !isNaN(end) ? end : selectionEnd;\n    this.elm.selectionStart = this.start;\n    this.elm.selectionEnd = this.end;\n    return this;\n  }\n  insertText(text: string) {\n    // Most of the used APIs only work with the field selected\n    this.elm.focus();\n    this.elm.setRangeText(text);\n    this.value = this.elm.value;\n    this.position();\n    return this;\n  }\n  getSelectedValue(start?: number, end?: number) {\n    const { selectionStart, selectionEnd } = this.elm;\n    return this.value.slice(\n      typeof start === 'number' && !isNaN(start) ? start : selectionStart,\n      typeof end === 'number' && !isNaN(end) ? start : selectionEnd,\n    );\n  }\n  getLineStartNumber() {\n    let start = this.start;\n    while (start > 0) {\n      start--;\n      if (this.value.charAt(start) === '\\n') {\n        start++;\n        break;\n      }\n    }\n    return start;\n  }\n  /** Indent on new lines */\n  getIndentText() {\n    const start = this.getLineStartNumber();\n    const str = this.getSelectedValue(start);\n    let indent = '';\n    str.replace(/(^(\\s)+)/, (str, old) => (indent = old));\n    return indent;\n  }\n  lineStarInstert(text: string) {\n    if (text) {\n      const oldStart = this.start;\n      const start = this.getLineStartNumber();\n      const str = this.getSelectedValue(start);\n      this.position(start, this.end)\n        .insertText(\n          str\n            .split('\\n')\n            .map((txt) => text + txt)\n            .join('\\n'),\n        )\n        .position(oldStart + text.length, this.end);\n    }\n    return this;\n  }\n  lineStarRemove(text: string) {\n    if (text) {\n      const oldStart = this.start;\n      const start = this.getLineStartNumber();\n      const str = this.getSelectedValue(start);\n      const reg = new RegExp(`^${text}`, 'g');\n      let newStart = oldStart - text.length;\n      if (!reg.test(str)) {\n        newStart = oldStart;\n      }\n      this.position(start, this.end)\n        .insertText(\n          str\n            .split('\\n')\n            .map((txt) => txt.replace(reg, ''))\n            .join('\\n'),\n        )\n        .position(newStart, this.end);\n    }\n  }\n  /** Notify any possible listeners of the change */\n  notifyChange() {\n    const event = new Event('input', { bubbles: true, cancelable: false });\n    this.elm.dispatchEvent(event);\n  }\n}\n"
  ],
  "mappings": "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"
}