{
  "version": 3,
  "names": [
    "SelectionText",
    "constructor",
    "elm",
    "start",
    "end",
    "value",
    "selectionStart",
    "selectionEnd",
    "position",
    "isNaN",
    "insertText",
    "text",
    "focus",
    "setRangeText",
    "getSelectedValue",
    "slice",
    "getLineStartNumber",
    "charAt",
    "getIndentText",
    "str",
    "indent",
    "replace",
    "old",
    "lineStarInstert",
    "oldStart",
    "split",
    "map",
    "txt",
    "join",
    "length",
    "lineStarRemove",
    "reg",
    "RegExp",
    "newStart",
    "test",
    "notifyChange",
    "event",
    "Event",
    "bubbles",
    "cancelable",
    "dispatchEvent"
  ],
  "sources": [
    "../src/SelectionText.ts"
  ],
  "sourcesContent": [
    "export class SelectionText {\n  elm: HTMLTextAreaElement;\n  start: number;\n  end: number;\n  value: string;\n  constructor(elm: HTMLTextAreaElement) {\n    const { selectionStart, selectionEnd } = elm;\n    this.elm = elm;\n    this.start = selectionStart;\n    this.end = selectionEnd;\n    this.value = this.elm.value;\n  }\n  position(start?: number, end?: number) {\n    const { selectionStart, selectionEnd } = this.elm;\n    this.start = typeof start === 'number' && !isNaN(start) ? start : selectionStart;\n    this.end = typeof end === 'number' && !isNaN(end) ? end : selectionEnd;\n    this.elm.selectionStart = this.start;\n    this.elm.selectionEnd = this.end;\n    return this;\n  }\n  insertText(text: string) {\n    // Most of the used APIs only work with the field selected\n    this.elm.focus();\n    this.elm.setRangeText(text);\n    this.value = this.elm.value;\n    this.position();\n    return this;\n  }\n  getSelectedValue(start?: number, end?: number) {\n    const { selectionStart, selectionEnd } = this.elm;\n    return this.value.slice(\n      typeof start === 'number' && !isNaN(start) ? start : selectionStart,\n      typeof end === 'number' && !isNaN(end) ? start : selectionEnd,\n    );\n  }\n  getLineStartNumber() {\n    let start = this.start;\n    while (start > 0) {\n      start--;\n      if (this.value.charAt(start) === '\\n') {\n        start++;\n        break;\n      }\n    }\n    return start;\n  }\n  /** Indent on new lines */\n  getIndentText() {\n    const start = this.getLineStartNumber();\n    const str = this.getSelectedValue(start);\n    let indent = '';\n    str.replace(/(^(\\s)+)/, (str, old) => (indent = old));\n    return indent;\n  }\n  lineStarInstert(text: string) {\n    if (text) {\n      const oldStart = this.start;\n      const start = this.getLineStartNumber();\n      const str = this.getSelectedValue(start);\n      this.position(start, this.end)\n        .insertText(\n          str\n            .split('\\n')\n            .map((txt) => text + txt)\n            .join('\\n'),\n        )\n        .position(oldStart + text.length, this.end);\n    }\n    return this;\n  }\n  lineStarRemove(text: string) {\n    if (text) {\n      const oldStart = this.start;\n      const start = this.getLineStartNumber();\n      const str = this.getSelectedValue(start);\n      const reg = new RegExp(`^${text}`, 'g');\n      let newStart = oldStart - text.length;\n      if (!reg.test(str)) {\n        newStart = oldStart;\n      }\n      this.position(start, this.end)\n        .insertText(\n          str\n            .split('\\n')\n            .map((txt) => txt.replace(reg, ''))\n            .join('\\n'),\n        )\n        .position(newStart, this.end);\n    }\n  }\n  /** Notify any possible listeners of the change */\n  notifyChange() {\n    const event = new Event('input', { bubbles: true, cancelable: false });\n    this.elm.dispatchEvent(event);\n  }\n}\n"
  ],
  "mappings": "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"
}